name: Production 7.0.3 Docker Build (Corrected)

on:
  workflow_dispatch:

jobs:
  build-and-push:
    # A condição 'if' foi removida para permitir a execução no seu fork.
    runs-on: ubuntu-22.04
    steps:
      # Passo 1: Configurar o ambiente de build multi-plataforma
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Passo 2: Fazer o checkout do SEU repositório devops (este aqui)
      - name: Checkout DevOps Repository
        uses: actions/checkout@v4

      # Passo 3: Fazer o checkout do SEU fork do código-fonte
      - name: Checkout OpenEMR Source from Your Fork
        uses: actions/checkout@v4
        with:
          repository: lucirlei/openemr # Aponta para o seu fork do código
          path: src-openemr # Baixa o código para uma pasta específica

      # Passo 4: Fazer o login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Passo 5: Obter a data do build para a tag
      - name: Get build date
        id: build_date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      # Passo 6: Construir e publicar a imagem
      - name: Build and push 7.0.3 docker
        uses: docker/build-push-action@v5
        with:
          # Contexto é a raiz deste repo devops
          context: .
          # O arquivo é o Dockerfile específico da versão
          file: ./docker/openemr/7.0.3/Dockerfile
          # Tags para a sua imagem
          tags: |
            openemr/openemr:7.0.3
            openemr/openemr:7.0.3.4
            openemr/openemr:7.0.3.4-${{ steps.build_date.outputs.date }}
            openemr/openemr:latest
          platforms: linux/amd64,linux/arm64
          push: true
          # no-cache: true # Descomente se quiser forçar um build sem cache
