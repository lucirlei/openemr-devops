# .github/workflows/publish-custom-image.yml

name: Build and Publish My Custom OpenEMR Image

on:
  # Permite que você rode este workflow manualmente pela aba "Actions"
  workflow_dispatch:

env:
  # TODO: Troque para o seu registro. Ex: ghcr.io
  REGISTRY: docker.io
  # TODO: Troque 'seu-usuario' pelo seu nome de usuário no Docker Hub
  IMAGE_NAME: seu-usuario/openemr-custom
  # Define a versão do OpenEMR que o Dockerfile usará.
  # Verifique a estrutura de pastas em 'docker/openemr' para ver as versões disponíveis.
  OPENEMR_VERSION: '7.0.2'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Clona o SEU repositório de DevOps (o que contém este workflow)
      - name: Checkout DevOps Repository
        uses: actions/checkout@v4

      # 2. Clona o SEU repositório do código-fonte do OpenEMR
      - name: Checkout OpenEMR Source from My Fork
        uses: actions/checkout@v4
        with:
          # Aponta para o SEU fork do código-fonte
          repository: ${{ github.repository_owner }}/openemr
          # Coloca o código-fonte em uma pasta chamada 'src-openemr'
          path: src-openemr

      # 3. Faz o login no seu Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Extrai metadados (tags) para a imagem
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            ${{ env.OPENEMR_VERSION }}

      # 5. Configura o Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6. Constrói e publica a imagem
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # O 'contexto' agora é o diretório raiz deste repo (devops)
          context: .
          # O 'file' aponta para o Dockerfile correto dentro da estrutura do repo devops
          file: ./docker/openemr/${{ env.OPENEMR_VERSION }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
